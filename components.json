{
  "@context": {
    "@vocab": "http://linkedsoftwaredependencies.org/vocabulary/components#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "npmd": "http://example.org/npmdataset/",
    "npm": "http://example.org/npm#",
    "ldfs": "npmd:bundles/npm/ldf-server/",
    "rdfa": "http://www.w3.org/ns/rdfa#",
    "owl": "http://www.w3.org/2002/07/owl#",
    "value": { "@id": "rdf:value", "@type": "@id"}
  },
  "@id": "npmd:bundles/npm/@ldf/server",
  "@type": "Module",
  "npm:requireName": "ldf-server",
  "hasComponent": [
    {
      "@id": "ldfs:Server/Qpf",
      "@type": "ComponentConstructable",
      "npm:requireElement": "LinkedDataFragmentsServerWorker",
      "rdfs:comment": "LinkedDataFragmentsServer is an HTTP server that provides access to Linked Data Fragments",
      "hasParameter": [
        {
          "@id": "rdfs:label",
          "rdfs:comment": "The server name",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:baseURL",
          "rdfs:comment": "The base URL path for the server",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:urlData",
          "rdfs:comment": "The UrlData helper object",
          "rdfs:range": {
            "@id": "ldfs:UrlData",
            "rdfs:subClassOf": "lsdc:Component"
          },
          "parameterUnique": true
        },
        {
          "@id": "ldfs:port",
          "rdfs:comment": "The port the server will bind with",
          "rdfs:range": "xsd:integer",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:workers",
          "rdfs:comment": "The number of server instances that will be started",
          "rdfs:range": "xsd:integer",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:datasource",
          "rdfs:comment": "A datasource for the server",
          "rdfs:range": {
            "@id": "ldfs:Datasource",
            "rdfs:subClassOf": "lsdc:Component"
          }
        },
        {
          "@id": "ldfs:prefix",
          "rdfs:comment": "The URI prefixes that will be used"
        },
        {
          "@id": "ldfs:router",
          "rdfs:comment": "A router for the server",
          "rdfs:range": {
            "@id": "ldfs:Router",
            "rdfs:subClassOf": "lsdc:Component"
          }
        },
        {
          "@id": "ldfs:controller",
          "rdfs:comment": "A controller for the server",
          "rdfs:range": {
            "@id": "ldfs:Controller",
            "rdfs:subClassOf": "lsdc:Component"
          }
        },
        {
          "@id": "ldfs:response",
          "rdfs:comment": "Configuration for the server response data",
          "rdfs:range": {
            "@id": "ldfs:Response"
          }
        },
        {
          "@id": "ldfs:sslKey",
          "rdfs:comment": "Path to an SSL key",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:sslCert",
          "rdfs:comment": "Path to an SSL certificate",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:sslCa",
          "rdfs:comment": "Path to an SSL certificate authority",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:logging",
          "rdfs:comment": "If the server should perform logging",
          "rdfs:range": "xsd:boolean",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:loggingFile",
          "rdfs:comment": "Path to a log file",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "title",
                "value": "rdfs:label"
              },
              {
                "rdfs:label": "urlData",
                "value": "ldfs:urlData"
              },
              {
                "rdfs:label": "port",
                "value": "ldfs:port"
              },
              {
                "rdfs:label": "workers",
                "value": "ldfs:workers"
              },
              {
                "@id": "ldfs:datasourcesField",
                "rdfs:label": "datasources",
                "rdf:value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "dynamicEntriesFrom": { "@id": "ldfs:datasource" },
                      "rdfs:label": { "@id": "rdf:subject" },
                      "value": "rdf:object"
                    }
                  ]
                }
              },
              {
                "rdfs:label": "dereference",
                "value": "ldfs:dereference"
              },
              {
                "@id": "ldfs:prefixFieldMapping",
                "rdfs:label": "prefixes",
                "rdf:value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "dynamicEntriesFrom": { "@id": "ldfs:prefix" },
                      "rdfs:label": { "@id": "rdfa:prefix" },
                      "value": "rdfa:uri"
                    }
                  ]
                }
              },
              {
                "@id": "ldfs:routersField",
                "rdfs:label": "routers",
                "value": "ldfs:router"
              },
              {
                "rdfs:label": "controllers",
                "value": "ldfs:controller"
              },
              {
                "rdfs:label": "response",
                "rdf:value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "rdfs:label": "header",
                      "rdf:value": {
                        "@type": "Object",
                        "hasField": [
                          {
                            "dynamicEntriesFrom": { "@id": "ldfs:responseHeader" },
                            "rdfs:label": { "@id": "ldfs:headerName" },
                            "value": "ldfs:headerValue"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "rdfs:label": "ssl",
                "rdf:value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "rdfs:label": "keys",
                      "value": {
                        "@type": "Object",
                        "hasField": [
                          {
                            "rdfs:label": "key",
                            "value": "ldfs:sslKey"
                          },
                          {
                            "rdfs:label": "cert",
                            "value": "ldfs:sslCert"
                          },
                          {
                            "rdfs:label": "ca",
                            "value": "ldfs:sslCa"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "rdfs:label": "logging",
                "value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "rdfs:label": "enabled",
                      "value": "ldfs:logging"
                    },
                    {
                      "rdfs:label": "file",
                      "value": "ldfs:loggingFile"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },





    {
      "@id": "ldfs:Router/Datasource",
      "@type": [ "ComponentConstructable", "ldfs:Router" ],
      "npm:requireElement": "routers.DatasourceRouter",
      "rdfs:comment": "A DatasourceRouter routes URLs to data sources"
    },
    {
      "@id": "ldfs:Router/Page",
      "@type": [ "ComponentConstructable", "ldfs:Router" ],
      "npm:requireElement": "routers.PageRouter",
      "rdfs:comment": "A PageRouter routes page numbers to offsets",
      "hasParameter": [
        {
          "@id": "ldfs:pageSize",
          "rdfs:comment": "The triple page size, which defaults to 100",
          "rdfs:range": "xsd:integer",
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "pageSize",
                "value": "ldfs:pageSize"
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Router/QuadPattern",
      "@type": [ "ComponentConstructable", "ldfs:Router" ],
      "npm:requireElement": "routers.QuadPatternRouter",
      "rdfs:comment": "A QuadPatternRouter routes basic quad patterns",
      "hasParameter": [
        {
          "@id": "ldfs:routerPrefix",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:prefix" },
            "owl:allValuesFrom": { "@id": "ldfs:Server/Qpf" }
          },
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "@id": "ldfs:prefixFieldMapping"
              }
            ]
          }
        ]
      }
    },





    {
      "@id": "ldfs:Controller/Summary",
      "@type": [ "ComponentConstructable", "ldfs:Controller" ],
      "npm:requireElement": "controllers.SummaryController",
      "rdfs:comment": "A SummaryController responds to requests for summaries",
      "hasParameter": [
        {
          "@id": "ldfs:summaryDir",
          "rdfs:comment": "Path to a directory where summaries can be found",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:summaryPath",
          "rdfs:comment": "Path matching for summaries",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "summaries",
                "value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "rdfs:label": "dir",
                      "value": "ldfs:summaryDir"
                    },
                    {
                      "rdfs:label": "path",
                      "value": "ldfs:summaryPath"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Controller/Timegate",
      "@type": [ "ComponentConstructable", "ldfs:Controller" ],
      "npm:requireElement": "controllers.TimegateController",
      "rdfs:comment": "A TimegateController responds to timegate requests",
      "hasParameter": [
        {
          "@id": "ldfs:timegatePath",
          "rdfs:comment": "Path matching for the time gate",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:memento",
          "rdfs:comment": "Path to a directory where summaries can be found",
          "rdfs:range": {
            "@id": "ldfs:Memento",
            "rdfs:hasProperty": [
              { "@id": "ldfs:mementoDatasource" },
              { "@id": "ldfs:mementoVersion" }
            ]
          }
        },
        {
          "@id": "ldfs:timegateRouter",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:router" },
            "owl:allValuesFrom": { "@id": "ldfs:Server/Qpf" }
          }
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "@id": "ldfs:timeGatesField",
                "rdfs:label": "timegates",
                "value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "rdfs:label": "baseUrl",
                      "value": "ldfs:timegatePath"
                    },
                    {
                      "rdfs:label": "mementos",
                      "value": {
                        "@type": "Object",
                        "hasField": [
                          {
                            "dynamicEntriesFrom": { "@id": "ldfs:memento" },
                            "rdfs:label": { "@id": "ldfs:mementoDatasource" },
                            "value": "ldfs:mementoVersion"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "@id": "ldfs:routersField"
              },
              {
                "@id": "ldfs:datasourcesField"
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Controller/QuadPatternFragments",
      "@type": [ "ComponentConstructable", "ldfs:Controller" ],
      "npm:requireElement": "controllers.QuadPatternFragmentsController",
      "rdfs:comment": "A QuadPatternFragmentsController responds to requests for TPFs and QPFs",
      "hasParameter": [
        {
          "@id": "ldfs:qpfRouter",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:router" },
            "owl:allValuesFrom": { "@id": "ldfs:Server/Qpf" }
          }
        },
        {
          "@id": "ldfs:qpfControllerExtension",
          "rdfs:comment": "An extension for this controller",
          "rdfs:range": {
            "@id": "ldfs:ControllerExtension",
            "rdfs:subClassOf": "lsdc:Component"
          }
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "@id": "ldfs:routersField"
              },
              {
                "rdfs:label": "extensions",
                "value": "ldfs:qpfControllerExtension"
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Controller/Assets",
      "@type": [ "ComponentConstructable", "ldfs:Controller" ],
      "npm:requireElement": "controllers.AssetsController",
      "rdfs:comment": "An AssetsController responds to requests for assets",
      "hasParameter": [
        {
          "@id": "ldfs:assetsDir",
          "rdfs:comment": "Path to a directory where assets can be found",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:assetsPath",
          "rdfs:comment": "Path matching for assets",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "assetsFolder",
                "value": "ldfs:assetsDir"
              },
              {
                "rdfs:label": "path",
                "value": "ldfs:assetsPath"
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Controller/Dereference",
      "@type": [ "ComponentConstructable", "ldfs:Controller" ],
      "npm:requireElement": "controllers.DereferenceController",
      "rdfs:comment": "A DeferenceController responds to dereferencing requests",
      "hasParameter": [
        {
          "@id": "ldfs:dereference",
          "rdfs:comment": "A dereferencing for a datasource to a path",
          "rdfs:range": {
            "@id": "ldfs:Dereferencement",
            "rdfs:hasProperty": [
              { "@id": "ldfs:dereferenceDatasource" },
              { "@id": "ldfs:dereferencePath" }
            ]
          }
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "dereference",
                "value": {
                  "@type": "Object",
                  "hasField": [
                    {
                      "dynamicEntriesFrom": { "@id": "ldfs:dereference" },
                      "rdfs:label": { "@id": "ldfs:dereferencePath" },
                      "value": "ldfs:dereferenceDatasource"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Controller/NotFound",
      "@type": [ "ComponentConstructable", "ldfs:Controller" ],
      "npm:requireElement": "controllers.NotFoundController",
      "rdfs:comment": "A NotFoundController responds to requests that cannot be resolved"
    },





    {
      "@id": "ldfs:ControllerExtension/Memento",
      "@type": [ "ComponentConstructable", "ldfs:ControllerExtension" ],
      "npm:requireElement": "controllers.MementoControllerExtension",
      "rdfs:comment": "A MementoControllerExtension extends Triple Pattern Fragments responses with Memento headers",
      "hasParameter": [
        {
          "@id": "ldfs:mementoTimegatePath",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:timegatePath" },
            "owl:allValuesFrom": { "@id": "ldfs:Controller/Timegate" }
          }
        },
        {
          "@id": "ldfs:mementoMemento",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:memento" },
            "owl:allValuesFrom": { "@id": "ldfs:Controller/Timegate" }
          }
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "@id": "ldfs:timeGatesField"
              },
              {
                "@id": "ldfs:routersField"
              },
              {
                "@id": "ldfs:datasourcesField"
              }
            ]
          }
        ]
      }
    },




    {
      "@id": "ldfs:UrlData",
      "@type": [ "ComponentConstructable" ],
      "npm:requireElement": "UrlData",
      "rdfs:comment": "A data object class for preset URL information",
      "hasParameter": [
        {
          "@id": "ldfs:UrlData/baseURL",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:baseURL" },
            "owl:allValuesFrom": { "@id": "ldfs:Server/Qpf" }
          }
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "baseURL",
                "value": "ldfs:baseURL"
              }
            ]
          }
        ]
      }
    },





    {
      "@id": "ldfs:Datasource/Hdt",
      "@type": [ "ComponentConstructable", "ldfs:Datasource" ],
      "npm:requireElement": "datasources.HdtDatasource",
      "rdfs:comment": "An HdtDatasource loads and queries an HDT document in-process",
      "hasParameter": [
        {
          "@id": "rdfs:label",
          "rdfs:comment": "The datasource name",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "rdfs:comment",
          "rdfs:comment": "The datasource description",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:Datasource/enabled",
          "rdfs:comment": "If the datasource is enabled, by default true",
          "rdfs:range": "xsd:boolean",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:Datasource/urlData",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:urlData" },
            "owl:allValuesFrom": { "@id": "ldfs:Server/Qpf" }
          }
        },
        {
          "@id": "ldfs:Datasource/Hdt/file",
          "rdfs:comment": "The HDT datasource source file",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:Datasource/Hdt/external",
          "rdfs:comment": "Switch to external HDT datasource if true",
          "rdfs:range": "xsd:boolean",
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "id",
                "value": "rdf:subject"
              },
              {
                "rdfs:label": "title",
                "value": "rdfs:label"
              },
              {
                "rdfs:label": "description",
                "value": "rdfs:comment"
              },
              {
                "rdfs:label": "enabled",
                "value": "ldfs:Datasource/enabled"
              },
              {
                "rdfs:label": "urlData",
                "value": "ldfs:urlData"
              },
              {
                "rdfs:label": "file",
                "value": "ldfs:Datasource/Hdt/file"
              },
              {
                "rdfs:label": "external",
                "value": "ldfs:Datasource/Hdt/external"
              }
            ]
          }
        ]
      }
    },

    {
      "@id": "ldfs:Datasource/Sparql",
      "@type": [ "ComponentConstructable", "ldfs:Datasource" ],
      "npm:requireElement": "datasources.SparqlDatasource",
      "rdfs:comment": "A SparqlDatasource provides queryable access to a SPARQL endpoint",
      "hasParameter": [
        {
          "@id": "rdfs:label",
          "rdfs:comment": "The datasource name",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "rdfs:comment",
          "rdfs:comment": "The datasource description",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:Datasource/enabled",
          "rdfs:comment": "If the datasource is enabled, by default true",
          "rdfs:range": "xsd:boolean",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:Datasource/urlData",
          "rdfs:subClassOf": {
            "@type": "owl:Restriction",
            "owl:onProperty": { "@id": "ldfs:urlData" },
            "owl:allValuesFrom": { "@id": "ldfs:Server/Qpf" }
          }
        },
        {
          "@id": "ldfs:Datasource/Sparql/endpoint",
          "rdfs:comment": "The SPARQL endpoint URL",
          "rdfs:range": "xsd:string",
          "parameterUnique": true
        },
        {
          "@id": "ldfs:Datasource/Sparql/defaultGraph",
          "rdfs:comment": "The default graph for the SPARQL endpoint",
          "parameterUnique": true
        }
      ],
      "constructorMapping": {
        "@list": [
          {
            "@type": "Object",
            "hasField": [
              {
                "rdfs:label": "id",
                "value": "rdf:subject"
              },
              {
                "rdfs:label": "title",
                "value": "rdfs:label"
              },
              {
                "rdfs:label": "description",
                "value": "rdfs:comment"
              },
              {
                "rdfs:label": "enabled",
                "value": "ldfs:Datasource/enabled"
              },
              {
                "rdfs:label": "urlData",
                "value": "ldfs:urlData"
              },
              {
                "rdfs:label": "file",
                "value": "ldfs:Datasource/Sparql/endpoint"
              },
              {
                "rdfs:label": "external",
                "value": "ldfs:Datasource/Sparql/defaultGraph"
              }
            ]
          }
        ]
      }
    }
  ]
}
